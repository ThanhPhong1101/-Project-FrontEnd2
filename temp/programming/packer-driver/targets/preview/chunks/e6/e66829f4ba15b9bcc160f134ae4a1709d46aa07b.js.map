{"version":3,"sources":["file:///D:/ThanhPhong/FE02/Project-FrontEnd2/assets/Scripts/PipePool.ts"],"names":["_decorator","Component","instantiate","Node","NodePool","Prefab","ccclass","property","PipePool","type","tooltip","pool","createPipe","initPool","initCount","i","prefabPipes","pipePoolHome","addChild","put","addPool","size","get","reset","removeAllChildren","clear"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,M,OAAAA,M;;;;;;;;;OACvD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAGjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEJ,MAAR;AAAgBK,QAAAA,OAAO,EAAE;AAAzB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN,IAAR;AAAcO,QAAAA,OAAO,EAAE;AAAvB,OAAD,C,2BANb,MACaF,QADb,SAC8BP,SAD9B,CAEA;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAOWU,IAPX,GAOkB,IAAIP,QAAJ,EAPlB;AAAA,eAQWQ,UARX,GAQ8B,IAR9B;AAAA;;AAWIC,QAAAA,QAAQ,GACR;AACI;AACA,cAAIC,SAAS,GAAG,CAAhB,CAFJ,CAII;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EACA;AACI;AACA,gBAAIH,UAAU,GAAGV,WAAW,CAAC,KAAKc,WAAN,CAA5B,CAFJ,CAEoD;AAChD;;AACA,gBAAID,CAAC,IAAI,CAAT,EACA;AACI,mBAAKE,YAAL,CAAkBC,QAAlB,CAA2BN,UAA3B;AACH,aAHD,MAIA;AACI;AACA,mBAAKD,IAAL,CAAUQ,GAAV,CAAcP,UAAd;AACH;AACJ;AACJ;;AAEDQ,QAAAA,OAAO,GACP;AACI;AACA,cAAI,KAAKT,IAAL,CAAUU,IAAV,KAAmB,CAAvB,EACA;AACI;AACA,iBAAKT,UAAL,GAAkB,KAAKD,IAAL,CAAUW,GAAV,EAAlB;AACH,WAJD,MAKA;AACI;AACA,iBAAKV,UAAL,GAAkBV,WAAW,CAAC,KAAKc,WAAN,CAA7B;AACH,WAVL,CAWI;;;AACA,eAAKC,YAAL,CAAkBC,QAAlB,CAA2B,KAAKN,UAAhC;AACH;;AAEDW,QAAAA,KAAK,GACL;AACI;AACA,eAAKN,YAAL,CAAkBO,iBAAlB;AACA,eAAKb,IAAL,CAAUc,KAAV;AACA,eAAKZ,QAAL;AACH;;AAvDL,O;;;;;iBAEyB,I","sourcesContent":["import { _decorator, Component, instantiate, Node, NodePool, Prefab } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PipePool')\nexport class PipePool extends Component \n{\n    @property({ type: Prefab, tooltip: 'Prefab Pipes' })\n    public prefabPipes = null;\n\n    @property({ type: Node, tooltip: 'Where the new pipes go' })\n    public pipePoolHome;\n\n    public pool = new NodePool();\n    public createPipe: Node = null;\n\n\n    initPool ()\n    {\n        //build the amount of nodes needed at a time\n        let initCount = 3;\n\n        //fill up the node pool\n        for (let i = 0; i < initCount; i++)\n        {\n            // create the new node\n            let createPipe = instantiate(this.prefabPipes); //instantiate means make a copy of the orginal\n            // put first one on the screen. So make it a child of the canvas.\n            if (i == 0)\n            {\n                this.pipePoolHome.addChild(createPipe);\n            } else\n            {\n                //put others into the nodePool\n                this.pool.put(createPipe);\n            }\n        }\n    }\n\n    addPool ()\n    {\n        //if the pool is not full add a new one, else get the first one in the pool\n        if (this.pool.size() > 0)\n        {\n            //get from the pool\n            this.createPipe = this.pool.get();\n        } else\n        {\n            //build a new one\n            this.createPipe = instantiate(this.prefabPipes);\n        }\n        //add pipe to game as a node\n        this.pipePoolHome.addChild(this.createPipe);\n    }\n\n    reset ()\n    {\n        //clear pool and reinitialize\n        this.pipePoolHome.removeAllChildren();\n        this.pool.clear();\n        this.initPool();\n    }\n}\n\n\n"]}