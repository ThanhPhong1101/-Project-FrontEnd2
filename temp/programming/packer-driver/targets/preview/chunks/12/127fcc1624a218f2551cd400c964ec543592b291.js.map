{"version":3,"sources":["file:///D:/ThanhPhong/FE02/Project-FrontEnd2/assets/Scripts/SpriteAnimator.ts"],"names":["_decorator","Component","Sprite","SpriteFrame","ccclass","property","SpriteAnimator","type","_currentFrame","_timeSinceLastFrame","onLoad","node","getComponent","update","deltaTime","paused","framesPerSecond","sprites","length","spriteFrame"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;;;;;;;;OACxC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;gCAGjBM,c,WADZF,OAAO,CAAC,gBAAD,C,UAIHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,CAACL,MAAD;AAAP,OAAD,C,UAIRG,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,CAACJ,WAAD;AAAP,OAAD,C,2BARb,MACaG,cADb,SACoCL,SADpC,CAEA;AAAA;AAAA;;AACI;AADJ;;AAKI;AALJ;;AASI;AATJ;;AAaI;AAbJ;;AAiBI;AAjBJ,eAkBYO,aAlBZ,GAkBoC,CAlBpC;AAoBI;AApBJ,eAqBYC,mBArBZ,GAqB0C,CArB1C;AAAA;;AAuBI;AACUC,QAAAA,MAAM,GAChB;AACI;AACA,eAAKR,MAAL,GAAc,KAAKS,IAAL,CAAUC,YAAV,CAAuBV,MAAvB,CAAd;AACH,SA5BL,CA8BI;;;AACOW,QAAAA,MAAM,CAACC,SAAD,EACb;AACI;AACA,cAAI,KAAKC,MAAT,EAAiB,OAFrB,CAII;;AACA,eAAKN,mBAAL,IAA4BK,SAA5B,CALJ,CAOI;;AACA,cAAI,KAAKL,mBAAL,IAA4B,IAAI,KAAKO,eAAzC,EACA;AACI;AACA,iBAAKR,aAAL,GAAqB,CAAC,KAAKA,aAAL,GAAqB,CAAtB,IAA2B,KAAKS,OAAL,CAAaC,MAA7D,CAFJ,CAGI;;AACA,iBAAKT,mBAAL,GAA2B,CAA3B;AACH,WAdL,CAgBI;;;AACA,eAAKP,MAAL,CAAYiB,WAAZ,GAA0B,KAAKF,OAAL,CAAa,KAAKT,aAAlB,CAA1B;AACH;;AAlDL,O;;;;;;;;;;iBAOoC,E;;0FAG/BH,Q;;;;;iBACgC,E;;iFAGhCA,Q;;;;;iBACwB,K","sourcesContent":["import { _decorator, Component, Node, Sprite, SpriteFrame } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpriteAnimator')\r\nexport class SpriteAnimator extends Component \r\n{\r\n    // Thuộc tính để chứa đối tượng Sprite sẽ được hoạt hình\r\n    @property({type: [Sprite]})\r\n    public Sprite: Sprite;\r\n\r\n    // Mảng các khung hình Sprite để tạo hoạt hình\r\n    @property({type: [SpriteFrame]})\r\n    public sprites: SpriteFrame[] = [];\r\n\r\n    // Số khung hình trên giây\r\n    @property\r\n    public framesPerSecond: number = 10;\r\n\r\n    // Biến kiểm tra xem hoạt hình có đang tạm dừng hay không\r\n    @property\r\n    public paused: boolean = false;\r\n\r\n    // Khung hình hiện tại của hoạt hình\r\n    private _currentFrame: number = 0;\r\n\r\n    // Thời gian từ khung hình cuối cùng\r\n    private _timeSinceLastFrame: number = 0;\r\n\r\n    // Hàm khởi tạo, được gọi khi đối tượng được tải\r\n    protected onLoad(): void\r\n    {\r\n        // Lấy thành phần Sprite từ node\r\n        this.Sprite = this.node.getComponent(Sprite);\r\n    }\r\n\r\n    // Hàm cập nhật, được gọi mỗi khung hình\r\n    public update(deltaTime: number)\r\n    {\r\n        // Nếu hoạt hình đang tạm dừng, thoát hàm\r\n        if (this.paused) return;\r\n\r\n        // Cập nhật thời gian từ khung hình cuối cùng\r\n        this._timeSinceLastFrame += deltaTime;\r\n\r\n        // Nếu thời gian đã đủ để chuyển sang khung hình tiếp theo\r\n        if (this._timeSinceLastFrame >= 1 / this.framesPerSecond)\r\n        {\r\n            // Cập nhật khung hình hiện tại\r\n            this._currentFrame = (this._currentFrame + 1) % this.sprites.length;\r\n            // Đặt lại thời gian từ khung hình cuối cùng\r\n            this._timeSinceLastFrame = 0;\r\n        }\r\n\r\n        // Cập nhật SpriteFrame hiện tại cho đối tượng Sprite\r\n        this.Sprite.spriteFrame = this.sprites[this._currentFrame];\r\n    }\r\n}\r\n"]}