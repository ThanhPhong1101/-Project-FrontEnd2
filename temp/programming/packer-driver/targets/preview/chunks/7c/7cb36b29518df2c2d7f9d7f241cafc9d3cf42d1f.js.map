{"version":3,"sources":["file:///D:/ThanhPhong/FE02/Project-FrontEnd2/assets/Scripts/BirdMenu.ts"],"names":["_decorator","CCFloat","Component","tween","Vec3","ccclass","property","BirdMenu","type","tweenPos","_wPos","startPos","onLoad","copy","node","worldPosition","getWorldPosition","moveUp","y","moveUpDistance","to","actionTime","easing","union","repeat","Infinity","onEnable","start","onDisable","stop","update","dt","setWorldPosition"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,O,OAAAA,O;AAASC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAcC,MAAAA,I,OAAAA,I;;;;;;;AAAkB;;;OACzE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U,GAAY;;0BAG7BO,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,UAGRK,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,2BANb,MACaM,QADb,SAC8BL,SAD9B,CACwC;AACxC;AAAA;AAAA;;AAAA;;AAEmC;AAFnC;;AAKwC;AALxC,eAOYO,QAPZ;AAOmC;AAPnC,eAQYC,KARZ,GAQ0B,IAAIN,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAR1B;AAQ6C;AAR7C,eASYO,QATZ;AAAA;;AAS4B;AAEdC,QAAAA,MAAM,GAAU;AAC1B;AACIR,UAAAA,IAAI,CAACS,IAAL,CAAU,KAAKH,KAAf,EAAsB,KAAKI,IAAL,CAAUC,aAAhC,EADJ,CACoD;;AAChD,eAAKJ,QAAL,GAAgB,KAAKG,IAAL,CAAUE,gBAAV,EAAhB,CAFJ,CAEkD;;AAC9C,cAAIC,MAAM,GAAG,KAAKH,IAAL,CAAUE,gBAAV,EAAb,CAHJ,CAG+C;;AAC3CC,UAAAA,MAAM,CAACC,CAAP,IAAY,KAAKC,cAAjB,CAJJ,CAIqC;AAEjC;;AACA,eAAKV,QAAL,GAAgBN,KAAK,CAAC,KAAKO,KAAN,CAAL,CACXU,EADW,CACR,KAAKC,UADG,EACSJ,MADT,EACiB;AAAEK,YAAAA,MAAM,EAAE;AAAV,WADjB,EACuC;AADvC,WAEXF,EAFW,CAER,KAAKC,UAFG,EAES,KAAKV,QAFd,EAEwB;AAAEW,YAAAA,MAAM,EAAE;AAAV,WAFxB,EAE8C;AAF9C,WAGXC,KAHW,GAGH;AAHG,WAIXC,MAJW,CAIJC,QAJI,CAAhB,CAPJ,CAW2B;AAC1B;;AAESC,QAAAA,QAAQ,GAAU;AAC5B;AACI,eAAKjB,QAAL,CAAckB,KAAd,GADJ,CAC2B;AAC1B;;AAESC,QAAAA,SAAS,GAAU;AAC7B;AACI,eAAKnB,QAAL,CAAcoB,IAAd,GADJ,CAC0B;AACzB;;AAESC,QAAAA,MAAM,CAAEC,EAAF,EAAoB;AACpC;AACI,eAAKjB,IAAL,CAAUkB,gBAAV,CAA2B,KAAKtB,KAAhC,EADJ,CAC4C;AAC3C;;AAvCL,O;;;;;iBAEgC,C;;;;;;;iBAGI,E","sourcesContent":["import { _decorator, CCFloat, Component, Node, tween, Tween, Vec3 } from 'cc'; // Import các module cần thiết từ 'cc'\r\nconst { ccclass, property } = _decorator; // Lấy ccclass và property từ _decorator\r\n\r\n@ccclass('BirdMenu')\r\nexport class BirdMenu extends Component // Định nghĩa lớp BirdMenu kế thừa từ Component\r\n{\r\n    @property({type: CCFloat})\r\n    public actionTime: number = 1; // Thời gian để thực hiện hành động (di chuyển)\r\n\r\n    @property({type: CCFloat})\r\n    public moveUpDistance: number = 20; // Khoảng cách di chuyển lên\r\n\r\n    private tweenPos: Tween<Vec3>; // Tween cho vị trí\r\n    private _wPos: Vec3 = new Vec3(0, 0, 0); // Vị trí thế giới của BirdMenu\r\n    private startPos: Vec3; // Vị trí bắt đầu\r\n\r\n    protected onLoad (): void // Hàm được gọi khi nạp xong\r\n    {\r\n        Vec3.copy(this._wPos, this.node.worldPosition); // Sao chép vị trí thế giới của node\r\n        this.startPos = this.node.getWorldPosition(); // Lưu vị trí bắt đầu\r\n        let moveUp = this.node.getWorldPosition(); // Lấy vị trí hiện tại của node\r\n        moveUp.y += this.moveUpDistance; // Tăng y của vị trí hiện tại thêm khoảng cách di chuyển lên\r\n\r\n        // Tạo tween cho vị trí của BirdMenu\r\n        this.tweenPos = tween(this._wPos)\r\n            .to(this.actionTime, moveUp, { easing: 'linear' }) // Di chuyển đến vị trí mới với khoảng thời gian actionTime\r\n            .to(this.actionTime, this.startPos, { easing: 'linear' }) // Di chuyển trở lại vị trí ban đầu với khoảng thời gian actionTime\r\n            .union() // Liên kết các hành động di chuyển\r\n            .repeat(Infinity); // Lặp lại vô hạn\r\n    }\r\n\r\n    protected onEnable (): void // Hàm được gọi khi BirdMenu được kích hoạt\r\n    {\r\n        this.tweenPos.start(); // Bắt đầu tween vị trí\r\n    }\r\n\r\n    protected onDisable (): void // Hàm được gọi khi BirdMenu bị tắt\r\n    {\r\n        this.tweenPos.stop(); // Dừng tween vị trí\r\n    }\r\n\r\n    protected update (dt: number): void // Hàm được gọi mỗi frame\r\n    {\r\n        this.node.setWorldPosition(this._wPos); // Cập nhật vị trí của node dựa trên tween\r\n    }\r\n}\r\n"]}