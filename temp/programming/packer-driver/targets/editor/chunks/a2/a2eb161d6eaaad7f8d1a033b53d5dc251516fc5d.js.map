{"version":3,"sources":["file:///D:/ThanhPhong/FE02/Project-FrontEnd2/assets/Scripts/ClariceCamera.ts"],"names":["_decorator","Component","Node","Vec2","ccclass","property","ClariceCamera","type","tooltip","displayOrder","update","deltaTime","target","targetPos","getWorldPosition","CameraPos","node","x","offset","setWorldPosition"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;;;;;;;AAAkB;;;OAClD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U,GAAY;AAE1C;AACA;AACA;AACA;;+BAEaM,a,WADZF,OAAO,CAAC,eAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL,IAAP;AAAaM,QAAAA,OAAO,EAAE,sBAAtB;AAA8CC,QAAAA,YAAY,EAAE;AAA5D,OAAD,C,UAGRJ,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEJ,IAAP;AAAaK,QAAAA,OAAO,EAAE,sBAAtB;AAA8CC,QAAAA,YAAY,EAAE;AAA5D,OAAD,C,2BANb,MACaH,aADb,SACmCL,SADnC,CAC6C;AAC7C;AAAA;AAAA;;AAAA;;AAEyB;AAFzB;AAAA;;AAK0C;AAEtC;AACA;AACA;AACA;AAEAS,QAAAA,MAAM,CAACC,SAAD,EAAoB;AAC1B;AACI,cAAI,KAAKC,MAAL,IAAe,IAAnB,EAAyB,OAD7B,CACqC;;AAEjC,cAAIC,SAAS,GAAG,KAAKD,MAAL,CAAYE,gBAAZ,EAAhB,CAHJ,CAGoD;;AAChD,cAAIC,SAAS,GAAG,KAAKC,IAAL,CAAUF,gBAAV,EAAhB,CAJJ,CAIkD;;AAE9CC,UAAAA,SAAS,CAACE,CAAV,GAAcJ,SAAS,CAACI,CAAV,GAAc,KAAKC,MAAL,CAAYD,CAAxC,CANJ,CAM+C;AAC3C;;AAEA,eAAKD,IAAL,CAAUG,gBAAV,CAA2BJ,SAA3B,EATJ,CAS2C;AAC1C;;AAvBL,O;;;;;;;;;;iBAK0B,IAAIZ,IAAJ,CAAS,CAAT,EAAY,CAAZ,C","sourcesContent":["import { _decorator, Component, Node, Vec2 } from 'cc'; // Import các module cần thiết từ 'cc'\r\nconst { ccclass, property } = _decorator; // Lấy ccclass và property từ _decorator\r\n\r\n/// <summary>\r\n/// This is a Camera Script to follow the player.\r\n/// Must be attached to the Camera Node.\r\n/// </summary>\r\n@ccclass('ClariceCamera')\r\nexport class ClariceCamera extends Component // Định nghĩa lớp ClariceCamera kế thừa từ Component\r\n{\r\n    @property({type: Node, tooltip: \"The target to follow\", displayOrder: 1})\r\n    public target: Node; // Đối tượng mục tiêu mà camera sẽ theo dõi\r\n\r\n    @property({type: Vec2, tooltip: \"The offset to follow\", displayOrder: 2})\r\n    public offset: Vec2 = new Vec2(0, 0); // Khoảng cách bù để camera theo dõi\r\n\r\n    // start() \r\n    // {\r\n    //     \r\n    // }\r\n\r\n    update(deltaTime: number) // Hàm được gọi mỗi frame\r\n    {\r\n        if (this.target == null) return; // Nếu không có mục tiêu thì không làm gì cả\r\n\r\n        let targetPos = this.target.getWorldPosition(); // Lấy vị trí của mục tiêu\r\n        let CameraPos = this.node.getWorldPosition(); // Lấy vị trí hiện tại của camera\r\n\r\n        CameraPos.x = targetPos.x + this.offset.x; // Cập nhật vị trí x của camera dựa trên vị trí mục tiêu và khoảng cách bù\r\n        // CameraPos.y = targetPos.y + this.offset.y; // Không cần cập nhật y trong trò chơi này\r\n\r\n        this.node.setWorldPosition(CameraPos); // Đặt lại vị trí của camera\r\n    }\r\n}\r\n"]}