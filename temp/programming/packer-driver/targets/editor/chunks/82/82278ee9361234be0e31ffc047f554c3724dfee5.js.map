{"version":3,"sources":["file:///D:/ThanhPhong/FE02/Project-FrontEnd2/assets/Scripts/UI/UISelectable.ts"],"names":["_decorator","Button","log","Component","ComponentEventHandler","EventHandler","AndroidNative","ccclass","property","UISelectable","type","tooltip","selectRight","selectLeft","selectUp","selectDown","onLoad","getComponent","SelectOnUp","SelectOnDown","SelectOnLeft","SelectOnRight","OnSubmit","clickEvents","count","length","showToast","node","name","emitEvents","OnSelect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAsBC,MAAAA,G,OAAAA,G;AAClCC,MAAAA,S,OAAAA,S;AAA2BC,MAAAA,qB,OAAhBC,Y;;AACXC,MAAAA,a,iBAAAA,a;;;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;8BAGjBS,Y,WADZF,OAAO,CAAC,cAAD,C,UAKHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET,MAAR;AAAgBU,QAAAA,OAAO,EAAE;AAAzB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET,MAAR;AAAgBU,QAAAA,OAAO,EAAE;AAAzB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET,MAAR;AAAgBU,QAAAA,OAAO,EAAE;AAAzB,OAAD,C,UAGRH,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET,MAAR;AAAgBU,QAAAA,OAAO,EAAE;AAAzB,OAAD,C,2BAdb,MACaF,YADb,SACkCN,SADlC,CAEA;AAAA;AAAA;;AAEI;AAFJ;;AAAA;;AAAA;;AAAA;;AAAA,eAeYF,MAfZ,GAe6B,IAf7B;AAAA,eAiBWW,WAjBX;AAAA,eAkBWC,UAlBX;AAAA,eAmBWC,QAnBX;AAAA,eAoBWC,UApBX;AAAA;;AAuBcC,QAAAA,MAAM,GAChB;AACI,eAAKf,MAAL,GAAc,KAAKgB,YAAL,CAAkBhB,MAAlB,CAAd;;AACA,cAAI,KAAKiB,UAAL,IAAmB,IAAvB,EACA;AACI,iBAAKJ,QAAL,GAAgB,KAAKI,UAAL,CAAgBD,YAAhB,CAA6BR,YAA7B,CAAhB;AACH;;AACD,cAAI,KAAKU,YAAL,IAAqB,IAAzB,EACA;AACI,iBAAKJ,UAAL,GAAkB,KAAKI,YAAL,CAAkBF,YAAlB,CAA+BR,YAA/B,CAAlB;AACH;;AACD,cAAI,KAAKW,YAAL,IAAqB,IAAzB,EACA;AACI,iBAAKP,UAAL,GAAkB,KAAKO,YAAL,CAAkBH,YAAlB,CAA+BR,YAA/B,CAAlB;AACH;;AACD,cAAI,KAAKY,aAAL,IAAsB,IAA1B,EACA;AACI,iBAAKT,WAAL,GAAmB,KAAKS,aAAL,CAAmBJ,YAAnB,CAAgCR,YAAhC,CAAnB;AACH;AACJ;;AAEMa,QAAAA,QAAQ,GACf;AACI,cAAI,KAAKrB,MAAL,IAAe,IAAf,IAAuB,KAAKA,MAAL,CAAYsB,WAAZ,IAA2B,IAAtD,EACA;AACI,gBAAIC,KAAK,GAAG,KAAKvB,MAAL,CAAYsB,WAAZ,CAAwBE,MAApC;AACA;AAAA;AAAA,gDAAcC,SAAd,CAAwB,yBAAyBF,KAAzB,GAAiC,GAAjC,GAAuC,KAAKG,IAAL,CAAUC,IAAzE,EAA+E,CAA/E;AACAxB,YAAAA,qBAAqB,CAACyB,UAAtB,CAAiC,KAAK5B,MAAL,CAAYsB,WAA7C;AACArB,YAAAA,GAAG,CAAC,cAAc,KAAKyB,IAAL,CAAUC,IAAzB,CAAH;AACH;AACJ;;AAEDE,QAAAA,QAAQ,GACR;AACI5B,UAAAA,GAAG,CAAC,cAAc,KAAKyB,IAAL,CAAUC,IAAzB,CAAH;AACH;;AA1DL,O;;;;;iBAIgC,I;;;;;;;iBAGE,I;;;;;;;iBAGA,I;;;;;;;iBAGC,I","sourcesContent":["import { _decorator, Button, EventGamepad, log } from 'cc';\nimport { Component, EventHandler as ComponentEventHandler } from 'cc';\nimport { AndroidNative } from '../Android/AndroidNative';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UISelectable')\nexport class UISelectable extends Component \n{\n\n    //For now lets just use a Explicit Navigation   \n    @property({ type: Button, tooltip: \"Navigation Up\", })\n    public SelectOnUp: Button = null;\n\n    @property({ type: Button, tooltip: \"Navigation Down\", })\n    public SelectOnDown: Button = null;\n\n    @property({ type: Button, tooltip: \"Navigation Left\", })\n    public SelectOnLeft: Button = null;\n\n    @property({ type: Button, tooltip: \"Navigation Right\", })\n    public SelectOnRight: Button = null;\n\n    private Button: Button = null;\n\n    public selectRight: UISelectable;\n    public selectLeft: UISelectable;\n    public selectUp: UISelectable;\n    public selectDown: UISelectable;\n\n\n    protected onLoad (): void\n    {\n        this.Button = this.getComponent(Button);\n        if (this.SelectOnUp != null)     \n        {\n            this.selectUp = this.SelectOnUp.getComponent(UISelectable);\n        }\n        if (this.SelectOnDown != null)     \n        {\n            this.selectDown = this.SelectOnDown.getComponent(UISelectable);\n        }\n        if (this.SelectOnLeft != null)     \n        {\n            this.selectLeft = this.SelectOnLeft.getComponent(UISelectable);\n        }\n        if (this.SelectOnRight != null)     \n        {\n            this.selectRight = this.SelectOnRight.getComponent(UISelectable);\n        }\n    }\n\n    public OnSubmit (): void\n    {\n        if (this.Button != null && this.Button.clickEvents != null)\n        {\n            let count = this.Button.clickEvents.length\n            AndroidNative.showToast(\"Tryin to emit event \" + count + \" \" + this.node.name, 0);\n            ComponentEventHandler.emitEvents(this.Button.clickEvents);\n            log(\"OnSubmit \" + this.node.name);\n        }\n    }\n\n    OnSelect () \n    {\n        log(\"OnSelect \" + this.node.name);\n    }\n}\n"]}